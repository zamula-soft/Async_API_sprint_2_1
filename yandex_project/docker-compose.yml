version: '3'
services:
  postgres:
    platform: linux/amd64
    build: ./db
    image: postgres:14.3-alpine
    ports:
      - "${DB_PORT}:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data/
  service:
    platform: linux/amd64
    build:
      context: app
      dockerfile: Dockerfile
    env_file:
      - .env
    volumes:
      - web-static:/opt/app/static
    depends_on:
      - postgres
  nginx:
    platform: linux/arm64/v8
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs:/etc/nginx/conf.d:ro
      - ./data:/data/:ro
      - web-static:/opt/app/static
    depends_on:
      - service
    ports:
      - "80:80"
  swagger:
    image: swaggerapi/swagger-ui
    build: ./swagger
    ports:
      - "8080:8080"
    environment:
      - SWAGGER_JSON=/swagger.yaml
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
  elasticsearch:
    image: elasticsearch:7.7.0
    platform: linux/amd64
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms200m -Xmx200m
    ports:
      - "9200:9200"
  etl:
    container_name: elt-proccess
    build:
      context: ./postgres_to_es
    env_file:
      - .env
    command: python3 main.py
    depends_on:
      - postgres
      - redis
      - elasticsearch


volumes:
  pgdata:
  web-static: